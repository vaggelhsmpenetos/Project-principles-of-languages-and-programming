Terminals unused in grammar

    NEW
    TRUE
    FALSE
    T_INTEGER_STRING


State 10 conflicts: 7 shift/reduce
State 18 conflicts: 3 shift/reduce
State 53 conflicts: 7 shift/reduce
State 57 conflicts: 7 shift/reduce
State 58 conflicts: 7 shift/reduce
State 68 conflicts: 18 reduce/reduce
State 130 conflicts: 12 shift/reduce
State 131 conflicts: 12 shift/reduce
State 132 conflicts: 12 shift/reduce
State 133 conflicts: 12 shift/reduce
State 134 conflicts: 12 shift/reduce
State 135 conflicts: 12 shift/reduce
State 136 conflicts: 12 shift/reduce
State 137 conflicts: 12 shift/reduce
State 138 conflicts: 12 shift/reduce
State 139 conflicts: 12 shift/reduce
State 140 conflicts: 12 shift/reduce
State 141 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class_list class_decl
    3           | class_decl

    4 class_decl: PUBLIC CLASS identifier RIGHT_BRC var_decls method_decls LEFT_BRC

    5 method_decls: method_decls method_decl
    6             | method_decl
    7             | %empty

    8 method_decl: modifier type identifier RIGHT_PAR param_list LEFT_PAR RIGHT_BRC var_decls opt_statements LEFT_BRC
    9            | identifier RIGHT_PAR param_list LEFT_PAR RIGHT_BRC var_decls opt_statements LEFT_BRC
   10            | modifier VOID identifier RIGHT_PAR param_list LEFT_PAR RIGHT_BRC var_decls opt_statements LEFT_BRC

   11 var_decls: var_decls var_decl
   12          | var_decl
   13          | %empty

   14 var_decl: type identifier EROTIMATIKO
   15         | modifier type identifier EROTIMATIKO

   16 modifier: PUBLIC
   17         | PRIVATE

   18 type: INT
   19     | CHAR
   20     | DOUBLE
   21     | BOOLEAN
   22     | STRING

   23 param_list: param_list COMMA param
   24           | param
   25           | %empty

   26 param: type identifier

   27 opt_statements: statement_list
   28               | %empty

   29 statement_list: statement_list statement
   30               | statement

   31 statement: var_decl
   32          | assignment
   33          | if_statement
   34          | while_statement
   35          | do_while_statement
   36          | for_statement
   37          | switch_statement
   38          | out_print
   39          | return_statement
   40          | break_statement

   41 assignment: identifier EQUALS expression EROTIMATIKO

   42 if_statement: IF RIGHT_PAR expression LEFT_PAR RIGHT_BRC opt_statements LEFT_BRC opt_else

   43 opt_else: ELSE RIGHT_BRC opt_statements LEFT_BRC
   44         | %empty

   45 while_statement: WHILE RIGHT_PAR expression LEFT_PAR RIGHT_PAR opt_statements LEFT_PAR

   46 do_while_statement: DO RIGHT_BRC opt_statements LEFT_BRC WHILE RIGHT_PAR expression LEFT_PAR EROTIMATIKO

   47 for_statement: FOR RIGHT_PAR type assignment expression EROTIMATIKO assignment LEFT_PAR RIGHT_BRC opt_statements LEFT_BRC

   48 switch_statement: SWITCH RIGHT_PAR expression LEFT_PAR RIGHT_BRC case_list opt_default_case LEFT_BRC

   49 case_list: case_list case_clause
   50          | case_clause

   51 case_clause: CASE expression COLON opt_statements

   52 opt_default_case: DEFAULT COLON opt_statements
   53                 | %empty

   54 out_print: OUTPRINT RIGHT_PAR QT var_list QT LEFT_PAR EROTIMATIKO
   55          | OUTPRINTLN RIGHT_PAR QT var_list QT LEFT_PAR EROTIMATIKO

   56 var_list: var_list T_VAR
   57         | T_VAR

   58 return_statement: RETURN expression EROTIMATIKO
   59                 | RETURN EROTIMATIKO

   60 break_statement: BREAK EROTIMATIKO

   61 expression: expression PLUS expression
   62           | expression MINUS expression
   63           | expression STAR expression
   64           | expression SLASH expression
   65           | expression GREATER_THAN expression
   66           | expression LESS_THAN expression
   67           | expression GE_OP expression
   68           | expression LE_OP expression
   69           | expression EQ_OP expression
   70           | expression NE_OP expression
   71           | expression AND_OP expression
   72           | expression OR_OP expression
   73           | RIGHT_PAR expression LEFT_PAR
   74           | identifier
   75           | T_INTEGER
   76           | T_DOUBLE
   77           | T_STR

   78 identifier: T_VAR


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PUBLIC (258) 4 16
    PRIVATE (259) 17
    VOID (260) 10
    INT (261) 18
    CHAR (262) 19
    DOUBLE (263) 20
    BOOLEAN (264) 21
    STRING (265) 22
    CLASS (266) 4
    NEW (267)
    RETURN (268) 58 59
    IF (269) 42
    ELSE (270) 43
    WHILE (271) 45 46
    DO (272) 46
    FOR (273) 47
    SWITCH (274) 48
    CASE (275) 51
    DEFAULT (276) 52
    BREAK (277) 60
    TRUE (278)
    FALSE (279)
    OUTPRINT (280) 54
    OUTPRINTLN (281) 55
    EQ_OP (282) 69
    COLON (283) 51 52
    NE_OP (284) 70
    GE_OP (285) 67
    LE_OP (286) 68
    AND_OP (287) 71
    OR_OP (288) 72
    EROTIMATIKO (289) 14 15 41 46 47 54 55 58 59 60
    COMMA (290) 23
    EQUALS (291) 41
    GREATER_THAN (292) 65
    LESS_THAN (293) 66
    PLUS (294) 61
    MINUS (295) 62
    STAR (296) 63
    SLASH (297) 64
    T_VAR (298) 56 57 78
    T_INTEGER (299) 75
    T_DOUBLE (300) 76
    T_STR (301) 77
    T_INTEGER_STRING (302)
    LEFT_PAR (303) 8 9 10 42 45 46 47 48 54 55 73
    RIGHT_PAR (304) 8 9 10 42 45 46 47 48 54 55 73
    LEFT_BRC (305) 4 8 9 10 42 43 46 47 48
    RIGHT_BRC (306) 4 8 9 10 42 43 46 47 48
    QT (307) 54 55


Nonterminals, with rules where they appear

    $accept (53)
        on left: 0
    program (54)
        on left: 1
        on right: 0
    class_list (55)
        on left: 2 3
        on right: 1 2
    class_decl (56)
        on left: 4
        on right: 2 3
    method_decls (57)
        on left: 5 6 7
        on right: 4 5
    method_decl (58)
        on left: 8 9 10
        on right: 5 6
    var_decls (59)
        on left: 11 12 13
        on right: 4 8 9 10 11
    var_decl (60)
        on left: 14 15
        on right: 11 12 31
    modifier (61)
        on left: 16 17
        on right: 8 10 15
    type (62)
        on left: 18 19 20 21 22
        on right: 8 14 15 26 47
    param_list (63)
        on left: 23 24 25
        on right: 8 9 10 23
    param (64)
        on left: 26
        on right: 23 24
    opt_statements (65)
        on left: 27 28
        on right: 8 9 10 42 43 45 46 47 51 52
    statement_list (66)
        on left: 29 30
        on right: 27 29
    statement (67)
        on left: 31 32 33 34 35 36 37 38 39 40
        on right: 29 30
    assignment (68)
        on left: 41
        on right: 32 47
    if_statement (69)
        on left: 42
        on right: 33
    opt_else (70)
        on left: 43 44
        on right: 42
    while_statement (71)
        on left: 45
        on right: 34
    do_while_statement (72)
        on left: 46
        on right: 35
    for_statement (73)
        on left: 47
        on right: 36
    switch_statement (74)
        on left: 48
        on right: 37
    case_list (75)
        on left: 49 50
        on right: 48 49
    case_clause (76)
        on left: 51
        on right: 49 50
    opt_default_case (77)
        on left: 52 53
        on right: 48
    out_print (78)
        on left: 54 55
        on right: 38
    var_list (79)
        on left: 56 57
        on right: 54 55 56
    return_statement (80)
        on left: 58 59
        on right: 39
    break_statement (81)
        on left: 60
        on right: 40
    expression (82)
        on left: 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77
        on right: 41 42 45 46 47 48 51 58 61 62 63 64 65 66 67 68 69 70 71 72 73
    identifier (83)
        on left: 78
        on right: 4 8 9 10 14 15 26 41 74


State 0

    0 $accept: . program $end

    PUBLIC  shift, and go to state 1

    program     go to state 2
    class_list  go to state 3
    class_decl  go to state 4


State 1

    4 class_decl: PUBLIC . CLASS identifier RIGHT_BRC var_decls method_decls LEFT_BRC

    CLASS  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: class_list .
    2 class_list: class_list . class_decl

    PUBLIC  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class_decl  go to state 7


State 4

    3 class_list: class_decl .

    $default  reduce using rule 3 (class_list)


State 5

    4 class_decl: PUBLIC CLASS . identifier RIGHT_BRC var_decls method_decls LEFT_BRC

    T_VAR  shift, and go to state 8

    identifier  go to state 9


State 6

    0 $accept: program $end .

    $default  accept


State 7

    2 class_list: class_list class_decl .

    $default  reduce using rule 2 (class_list)


State 8

   78 identifier: T_VAR .

    $default  reduce using rule 78 (identifier)


State 9

    4 class_decl: PUBLIC CLASS identifier . RIGHT_BRC var_decls method_decls LEFT_BRC

    RIGHT_BRC  shift, and go to state 10


State 10

    4 class_decl: PUBLIC CLASS identifier RIGHT_BRC . var_decls method_decls LEFT_BRC

    PUBLIC   shift, and go to state 11
    PRIVATE  shift, and go to state 12
    INT      shift, and go to state 13
    CHAR     shift, and go to state 14
    DOUBLE   shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    STRING   shift, and go to state 17

    PUBLIC    [reduce using rule 13 (var_decls)]
    PRIVATE   [reduce using rule 13 (var_decls)]
    INT       [reduce using rule 13 (var_decls)]
    CHAR      [reduce using rule 13 (var_decls)]
    DOUBLE    [reduce using rule 13 (var_decls)]
    BOOLEAN   [reduce using rule 13 (var_decls)]
    STRING    [reduce using rule 13 (var_decls)]
    $default  reduce using rule 13 (var_decls)

    var_decls  go to state 18
    var_decl   go to state 19
    modifier   go to state 20
    type       go to state 21


State 11

   16 modifier: PUBLIC .

    $default  reduce using rule 16 (modifier)


State 12

   17 modifier: PRIVATE .

    $default  reduce using rule 17 (modifier)


State 13

   18 type: INT .

    $default  reduce using rule 18 (type)


State 14

   19 type: CHAR .

    $default  reduce using rule 19 (type)


State 15

   20 type: DOUBLE .

    $default  reduce using rule 20 (type)


State 16

   21 type: BOOLEAN .

    $default  reduce using rule 21 (type)


State 17

   22 type: STRING .

    $default  reduce using rule 22 (type)


State 18

    4 class_decl: PUBLIC CLASS identifier RIGHT_BRC var_decls . method_decls LEFT_BRC
   11 var_decls: var_decls . var_decl

    PUBLIC   shift, and go to state 11
    PRIVATE  shift, and go to state 12
    INT      shift, and go to state 13
    CHAR     shift, and go to state 14
    DOUBLE   shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    STRING   shift, and go to state 17
    T_VAR    shift, and go to state 8

    PUBLIC    [reduce using rule 7 (method_decls)]
    PRIVATE   [reduce using rule 7 (method_decls)]
    T_VAR     [reduce using rule 7 (method_decls)]
    $default  reduce using rule 7 (method_decls)

    method_decls  go to state 22
    method_decl   go to state 23
    var_decl      go to state 24
    modifier      go to state 25
    type          go to state 21
    identifier    go to state 26


State 19

   12 var_decls: var_decl .

    $default  reduce using rule 12 (var_decls)


State 20

   15 var_decl: modifier . type identifier EROTIMATIKO

    INT      shift, and go to state 13
    CHAR     shift, and go to state 14
    DOUBLE   shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    STRING   shift, and go to state 17

    type  go to state 27


State 21

   14 var_decl: type . identifier EROTIMATIKO

    T_VAR  shift, and go to state 8

    identifier  go to state 28


State 22

    4 class_decl: PUBLIC CLASS identifier RIGHT_BRC var_decls method_decls . LEFT_BRC
    5 method_decls: method_decls . method_decl

    PUBLIC    shift, and go to state 11
    PRIVATE   shift, and go to state 12
    T_VAR     shift, and go to state 8
    LEFT_BRC  shift, and go to state 29

    method_decl  go to state 30
    modifier     go to state 31
    identifier   go to state 26


State 23

    6 method_decls: method_decl .

    $default  reduce using rule 6 (method_decls)


State 24

   11 var_decls: var_decls var_decl .

    $default  reduce using rule 11 (var_decls)


State 25

    8 method_decl: modifier . type identifier RIGHT_PAR param_list LEFT_PAR RIGHT_BRC var_decls opt_statements LEFT_BRC
   10            | modifier . VOID identifier RIGHT_PAR param_list LEFT_PAR RIGHT_BRC var_decls opt_statements LEFT_BRC
   15 var_decl: modifier . type identifier EROTIMATIKO

    VOID     shift, and go to state 32
    INT      shift, and go to state 13
    CHAR     shift, and go to state 14
    DOUBLE   shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    STRING   shift, and go to state 17

    type  go to state 33


State 26

    9 method_decl: identifier . RIGHT_PAR param_list LEFT_PAR RIGHT_BRC var_decls opt_statements LEFT_BRC

    RIGHT_PAR  shift, and go to state 34


State 27

   15 var_decl: modifier type . identifier EROTIMATIKO

    T_VAR  shift, and go to state 8

    identifier  go to state 35


State 28

   14 var_decl: type identifier . EROTIMATIKO

    EROTIMATIKO  shift, and go to state 36


State 29

    4 class_decl: PUBLIC CLASS identifier RIGHT_BRC var_decls method_decls LEFT_BRC .

    $default  reduce using rule 4 (class_decl)


State 30

    5 method_decls: method_decls method_decl .

    $default  reduce using rule 5 (method_decls)


State 31

    8 method_decl: modifier . type identifier RIGHT_PAR param_list LEFT_PAR RIGHT_BRC var_decls opt_statements LEFT_BRC
   10            | modifier . VOID identifier RIGHT_PAR param_list LEFT_PAR RIGHT_BRC var_decls opt_statements LEFT_BRC

    VOID     shift, and go to state 32
    INT      shift, and go to state 13
    CHAR     shift, and go to state 14
    DOUBLE   shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    STRING   shift, and go to state 17

    type  go to state 37


State 32

   10 method_decl: modifier VOID . identifier RIGHT_PAR param_list LEFT_PAR RIGHT_BRC var_decls opt_statements LEFT_BRC

    T_VAR  shift, and go to state 8

    identifier  go to state 38


State 33

    8 method_decl: modifier type . identifier RIGHT_PAR param_list LEFT_PAR RIGHT_BRC var_decls opt_statements LEFT_BRC
   15 var_decl: modifier type . identifier EROTIMATIKO

    T_VAR  shift, and go to state 8

    identifier  go to state 39


State 34

    9 method_decl: identifier RIGHT_PAR . param_list LEFT_PAR RIGHT_BRC var_decls opt_statements LEFT_BRC

    INT      shift, and go to state 13
    CHAR     shift, and go to state 14
    DOUBLE   shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    STRING   shift, and go to state 17

    $default  reduce using rule 25 (param_list)

    type        go to state 40
    param_list  go to state 41
    param       go to state 42


State 35

   15 var_decl: modifier type identifier . EROTIMATIKO

    EROTIMATIKO  shift, and go to state 43


State 36

   14 var_decl: type identifier EROTIMATIKO .

    $default  reduce using rule 14 (var_decl)


State 37

    8 method_decl: modifier type . identifier RIGHT_PAR param_list LEFT_PAR RIGHT_BRC var_decls opt_statements LEFT_BRC

    T_VAR  shift, and go to state 8

    identifier  go to state 44


State 38

   10 method_decl: modifier VOID identifier . RIGHT_PAR param_list LEFT_PAR RIGHT_BRC var_decls opt_statements LEFT_BRC

    RIGHT_PAR  shift, and go to state 45


State 39

    8 method_decl: modifier type identifier . RIGHT_PAR param_list LEFT_PAR RIGHT_BRC var_decls opt_statements LEFT_BRC
   15 var_decl: modifier type identifier . EROTIMATIKO

    EROTIMATIKO  shift, and go to state 43
    RIGHT_PAR    shift, and go to state 46


State 40

   26 param: type . identifier

    T_VAR  shift, and go to state 8

    identifier  go to state 47


State 41

    9 method_decl: identifier RIGHT_PAR param_list . LEFT_PAR RIGHT_BRC var_decls opt_statements LEFT_BRC
   23 param_list: param_list . COMMA param

    COMMA     shift, and go to state 48
    LEFT_PAR  shift, and go to state 49


State 42

   24 param_list: param .

    $default  reduce using rule 24 (param_list)


State 43

   15 var_decl: modifier type identifier EROTIMATIKO .

    $default  reduce using rule 15 (var_decl)


State 44

    8 method_decl: modifier type identifier . RIGHT_PAR param_list LEFT_PAR RIGHT_BRC var_decls opt_statements LEFT_BRC

    RIGHT_PAR  shift, and go to state 46


State 45

   10 method_decl: modifier VOID identifier RIGHT_PAR . param_list LEFT_PAR RIGHT_BRC var_decls opt_statements LEFT_BRC

    INT      shift, and go to state 13
    CHAR     shift, and go to state 14
    DOUBLE   shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    STRING   shift, and go to state 17

    $default  reduce using rule 25 (param_list)

    type        go to state 40
    param_list  go to state 50
    param       go to state 42


State 46

    8 method_decl: modifier type identifier RIGHT_PAR . param_list LEFT_PAR RIGHT_BRC var_decls opt_statements LEFT_BRC

    INT      shift, and go to state 13
    CHAR     shift, and go to state 14
    DOUBLE   shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    STRING   shift, and go to state 17

    $default  reduce using rule 25 (param_list)

    type        go to state 40
    param_list  go to state 51
    param       go to state 42


State 47

   26 param: type identifier .

    $default  reduce using rule 26 (param)


State 48

   23 param_list: param_list COMMA . param

    INT      shift, and go to state 13
    CHAR     shift, and go to state 14
    DOUBLE   shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    STRING   shift, and go to state 17

    type   go to state 40
    param  go to state 52


State 49

    9 method_decl: identifier RIGHT_PAR param_list LEFT_PAR . RIGHT_BRC var_decls opt_statements LEFT_BRC

    RIGHT_BRC  shift, and go to state 53


State 50

   10 method_decl: modifier VOID identifier RIGHT_PAR param_list . LEFT_PAR RIGHT_BRC var_decls opt_statements LEFT_BRC
   23 param_list: param_list . COMMA param

    COMMA     shift, and go to state 48
    LEFT_PAR  shift, and go to state 54


State 51

    8 method_decl: modifier type identifier RIGHT_PAR param_list . LEFT_PAR RIGHT_BRC var_decls opt_statements LEFT_BRC
   23 param_list: param_list . COMMA param

    COMMA     shift, and go to state 48
    LEFT_PAR  shift, and go to state 55


State 52

   23 param_list: param_list COMMA param .

    $default  reduce using rule 23 (param_list)


State 53

    9 method_decl: identifier RIGHT_PAR param_list LEFT_PAR RIGHT_BRC . var_decls opt_statements LEFT_BRC

    PUBLIC   shift, and go to state 11
    PRIVATE  shift, and go to state 12
    INT      shift, and go to state 13
    CHAR     shift, and go to state 14
    DOUBLE   shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    STRING   shift, and go to state 17

    PUBLIC    [reduce using rule 13 (var_decls)]
    PRIVATE   [reduce using rule 13 (var_decls)]
    INT       [reduce using rule 13 (var_decls)]
    CHAR      [reduce using rule 13 (var_decls)]
    DOUBLE    [reduce using rule 13 (var_decls)]
    BOOLEAN   [reduce using rule 13 (var_decls)]
    STRING    [reduce using rule 13 (var_decls)]
    $default  reduce using rule 13 (var_decls)

    var_decls  go to state 56
    var_decl   go to state 19
    modifier   go to state 20
    type       go to state 21


State 54

   10 method_decl: modifier VOID identifier RIGHT_PAR param_list LEFT_PAR . RIGHT_BRC var_decls opt_statements LEFT_BRC

    RIGHT_BRC  shift, and go to state 57


State 55

    8 method_decl: modifier type identifier RIGHT_PAR param_list LEFT_PAR . RIGHT_BRC var_decls opt_statements LEFT_BRC

    RIGHT_BRC  shift, and go to state 58


State 56

    9 method_decl: identifier RIGHT_PAR param_list LEFT_PAR RIGHT_BRC var_decls . opt_statements LEFT_BRC
   11 var_decls: var_decls . var_decl

    PUBLIC      shift, and go to state 11
    PRIVATE     shift, and go to state 12
    INT         shift, and go to state 13
    CHAR        shift, and go to state 14
    DOUBLE      shift, and go to state 15
    BOOLEAN     shift, and go to state 16
    STRING      shift, and go to state 17
    RETURN      shift, and go to state 59
    IF          shift, and go to state 60
    WHILE       shift, and go to state 61
    DO          shift, and go to state 62
    FOR         shift, and go to state 63
    SWITCH      shift, and go to state 64
    BREAK       shift, and go to state 65
    OUTPRINT    shift, and go to state 66
    OUTPRINTLN  shift, and go to state 67
    T_VAR       shift, and go to state 8

    $default  reduce using rule 28 (opt_statements)

    var_decl            go to state 68
    modifier            go to state 20
    type                go to state 21
    opt_statements      go to state 69
    statement_list      go to state 70
    statement           go to state 71
    assignment          go to state 72
    if_statement        go to state 73
    while_statement     go to state 74
    do_while_statement  go to state 75
    for_statement       go to state 76
    switch_statement    go to state 77
    out_print           go to state 78
    return_statement    go to state 79
    break_statement     go to state 80
    identifier          go to state 81


State 57

   10 method_decl: modifier VOID identifier RIGHT_PAR param_list LEFT_PAR RIGHT_BRC . var_decls opt_statements LEFT_BRC

    PUBLIC   shift, and go to state 11
    PRIVATE  shift, and go to state 12
    INT      shift, and go to state 13
    CHAR     shift, and go to state 14
    DOUBLE   shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    STRING   shift, and go to state 17

    PUBLIC    [reduce using rule 13 (var_decls)]
    PRIVATE   [reduce using rule 13 (var_decls)]
    INT       [reduce using rule 13 (var_decls)]
    CHAR      [reduce using rule 13 (var_decls)]
    DOUBLE    [reduce using rule 13 (var_decls)]
    BOOLEAN   [reduce using rule 13 (var_decls)]
    STRING    [reduce using rule 13 (var_decls)]
    $default  reduce using rule 13 (var_decls)

    var_decls  go to state 82
    var_decl   go to state 19
    modifier   go to state 20
    type       go to state 21


State 58

    8 method_decl: modifier type identifier RIGHT_PAR param_list LEFT_PAR RIGHT_BRC . var_decls opt_statements LEFT_BRC

    PUBLIC   shift, and go to state 11
    PRIVATE  shift, and go to state 12
    INT      shift, and go to state 13
    CHAR     shift, and go to state 14
    DOUBLE   shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    STRING   shift, and go to state 17

    PUBLIC    [reduce using rule 13 (var_decls)]
    PRIVATE   [reduce using rule 13 (var_decls)]
    INT       [reduce using rule 13 (var_decls)]
    CHAR      [reduce using rule 13 (var_decls)]
    DOUBLE    [reduce using rule 13 (var_decls)]
    BOOLEAN   [reduce using rule 13 (var_decls)]
    STRING    [reduce using rule 13 (var_decls)]
    $default  reduce using rule 13 (var_decls)

    var_decls  go to state 83
    var_decl   go to state 19
    modifier   go to state 20
    type       go to state 21


State 59

   58 return_statement: RETURN . expression EROTIMATIKO
   59                 | RETURN . EROTIMATIKO

    EROTIMATIKO  shift, and go to state 84
    T_VAR        shift, and go to state 8
    T_INTEGER    shift, and go to state 85
    T_DOUBLE     shift, and go to state 86
    T_STR        shift, and go to state 87
    RIGHT_PAR    shift, and go to state 88

    expression  go to state 89
    identifier  go to state 90


State 60

   42 if_statement: IF . RIGHT_PAR expression LEFT_PAR RIGHT_BRC opt_statements LEFT_BRC opt_else

    RIGHT_PAR  shift, and go to state 91


State 61

   45 while_statement: WHILE . RIGHT_PAR expression LEFT_PAR RIGHT_PAR opt_statements LEFT_PAR

    RIGHT_PAR  shift, and go to state 92


State 62

   46 do_while_statement: DO . RIGHT_BRC opt_statements LEFT_BRC WHILE RIGHT_PAR expression LEFT_PAR EROTIMATIKO

    RIGHT_BRC  shift, and go to state 93


State 63

   47 for_statement: FOR . RIGHT_PAR type assignment expression EROTIMATIKO assignment LEFT_PAR RIGHT_BRC opt_statements LEFT_BRC

    RIGHT_PAR  shift, and go to state 94


State 64

   48 switch_statement: SWITCH . RIGHT_PAR expression LEFT_PAR RIGHT_BRC case_list opt_default_case LEFT_BRC

    RIGHT_PAR  shift, and go to state 95


State 65

   60 break_statement: BREAK . EROTIMATIKO

    EROTIMATIKO  shift, and go to state 96


State 66

   54 out_print: OUTPRINT . RIGHT_PAR QT var_list QT LEFT_PAR EROTIMATIKO

    RIGHT_PAR  shift, and go to state 97


State 67

   55 out_print: OUTPRINTLN . RIGHT_PAR QT var_list QT LEFT_PAR EROTIMATIKO

    RIGHT_PAR  shift, and go to state 98


State 68

   11 var_decls: var_decls var_decl .
   31 statement: var_decl .

    PUBLIC      reduce using rule 11 (var_decls)
    PUBLIC      [reduce using rule 31 (statement)]
    PRIVATE     reduce using rule 11 (var_decls)
    PRIVATE     [reduce using rule 31 (statement)]
    INT         reduce using rule 11 (var_decls)
    INT         [reduce using rule 31 (statement)]
    CHAR        reduce using rule 11 (var_decls)
    CHAR        [reduce using rule 31 (statement)]
    DOUBLE      reduce using rule 11 (var_decls)
    DOUBLE      [reduce using rule 31 (statement)]
    BOOLEAN     reduce using rule 11 (var_decls)
    BOOLEAN     [reduce using rule 31 (statement)]
    STRING      reduce using rule 11 (var_decls)
    STRING      [reduce using rule 31 (statement)]
    RETURN      reduce using rule 11 (var_decls)
    RETURN      [reduce using rule 31 (statement)]
    IF          reduce using rule 11 (var_decls)
    IF          [reduce using rule 31 (statement)]
    WHILE       reduce using rule 11 (var_decls)
    WHILE       [reduce using rule 31 (statement)]
    DO          reduce using rule 11 (var_decls)
    DO          [reduce using rule 31 (statement)]
    FOR         reduce using rule 11 (var_decls)
    FOR         [reduce using rule 31 (statement)]
    SWITCH      reduce using rule 11 (var_decls)
    SWITCH      [reduce using rule 31 (statement)]
    BREAK       reduce using rule 11 (var_decls)
    BREAK       [reduce using rule 31 (statement)]
    OUTPRINT    reduce using rule 11 (var_decls)
    OUTPRINT    [reduce using rule 31 (statement)]
    OUTPRINTLN  reduce using rule 11 (var_decls)
    OUTPRINTLN  [reduce using rule 31 (statement)]
    T_VAR       reduce using rule 11 (var_decls)
    T_VAR       [reduce using rule 31 (statement)]
    LEFT_BRC    reduce using rule 11 (var_decls)
    LEFT_BRC    [reduce using rule 31 (statement)]
    $default    reduce using rule 11 (var_decls)


State 69

    9 method_decl: identifier RIGHT_PAR param_list LEFT_PAR RIGHT_BRC var_decls opt_statements . LEFT_BRC

    LEFT_BRC  shift, and go to state 99


State 70

   27 opt_statements: statement_list .
   29 statement_list: statement_list . statement

    PUBLIC      shift, and go to state 11
    PRIVATE     shift, and go to state 12
    INT         shift, and go to state 13
    CHAR        shift, and go to state 14
    DOUBLE      shift, and go to state 15
    BOOLEAN     shift, and go to state 16
    STRING      shift, and go to state 17
    RETURN      shift, and go to state 59
    IF          shift, and go to state 60
    WHILE       shift, and go to state 61
    DO          shift, and go to state 62
    FOR         shift, and go to state 63
    SWITCH      shift, and go to state 64
    BREAK       shift, and go to state 65
    OUTPRINT    shift, and go to state 66
    OUTPRINTLN  shift, and go to state 67
    T_VAR       shift, and go to state 8

    $default  reduce using rule 27 (opt_statements)

    var_decl            go to state 100
    modifier            go to state 20
    type                go to state 21
    statement           go to state 101
    assignment          go to state 72
    if_statement        go to state 73
    while_statement     go to state 74
    do_while_statement  go to state 75
    for_statement       go to state 76
    switch_statement    go to state 77
    out_print           go to state 78
    return_statement    go to state 79
    break_statement     go to state 80
    identifier          go to state 81


State 71

   30 statement_list: statement .

    $default  reduce using rule 30 (statement_list)


State 72

   32 statement: assignment .

    $default  reduce using rule 32 (statement)


State 73

   33 statement: if_statement .

    $default  reduce using rule 33 (statement)


State 74

   34 statement: while_statement .

    $default  reduce using rule 34 (statement)


State 75

   35 statement: do_while_statement .

    $default  reduce using rule 35 (statement)


State 76

   36 statement: for_statement .

    $default  reduce using rule 36 (statement)


State 77

   37 statement: switch_statement .

    $default  reduce using rule 37 (statement)


State 78

   38 statement: out_print .

    $default  reduce using rule 38 (statement)


State 79

   39 statement: return_statement .

    $default  reduce using rule 39 (statement)


State 80

   40 statement: break_statement .

    $default  reduce using rule 40 (statement)


State 81

   41 assignment: identifier . EQUALS expression EROTIMATIKO

    EQUALS  shift, and go to state 102


State 82

   10 method_decl: modifier VOID identifier RIGHT_PAR param_list LEFT_PAR RIGHT_BRC var_decls . opt_statements LEFT_BRC
   11 var_decls: var_decls . var_decl

    PUBLIC      shift, and go to state 11
    PRIVATE     shift, and go to state 12
    INT         shift, and go to state 13
    CHAR        shift, and go to state 14
    DOUBLE      shift, and go to state 15
    BOOLEAN     shift, and go to state 16
    STRING      shift, and go to state 17
    RETURN      shift, and go to state 59
    IF          shift, and go to state 60
    WHILE       shift, and go to state 61
    DO          shift, and go to state 62
    FOR         shift, and go to state 63
    SWITCH      shift, and go to state 64
    BREAK       shift, and go to state 65
    OUTPRINT    shift, and go to state 66
    OUTPRINTLN  shift, and go to state 67
    T_VAR       shift, and go to state 8

    $default  reduce using rule 28 (opt_statements)

    var_decl            go to state 68
    modifier            go to state 20
    type                go to state 21
    opt_statements      go to state 103
    statement_list      go to state 70
    statement           go to state 71
    assignment          go to state 72
    if_statement        go to state 73
    while_statement     go to state 74
    do_while_statement  go to state 75
    for_statement       go to state 76
    switch_statement    go to state 77
    out_print           go to state 78
    return_statement    go to state 79
    break_statement     go to state 80
    identifier          go to state 81


State 83

    8 method_decl: modifier type identifier RIGHT_PAR param_list LEFT_PAR RIGHT_BRC var_decls . opt_statements LEFT_BRC
   11 var_decls: var_decls . var_decl

    PUBLIC      shift, and go to state 11
    PRIVATE     shift, and go to state 12
    INT         shift, and go to state 13
    CHAR        shift, and go to state 14
    DOUBLE      shift, and go to state 15
    BOOLEAN     shift, and go to state 16
    STRING      shift, and go to state 17
    RETURN      shift, and go to state 59
    IF          shift, and go to state 60
    WHILE       shift, and go to state 61
    DO          shift, and go to state 62
    FOR         shift, and go to state 63
    SWITCH      shift, and go to state 64
    BREAK       shift, and go to state 65
    OUTPRINT    shift, and go to state 66
    OUTPRINTLN  shift, and go to state 67
    T_VAR       shift, and go to state 8

    $default  reduce using rule 28 (opt_statements)

    var_decl            go to state 68
    modifier            go to state 20
    type                go to state 21
    opt_statements      go to state 104
    statement_list      go to state 70
    statement           go to state 71
    assignment          go to state 72
    if_statement        go to state 73
    while_statement     go to state 74
    do_while_statement  go to state 75
    for_statement       go to state 76
    switch_statement    go to state 77
    out_print           go to state 78
    return_statement    go to state 79
    break_statement     go to state 80
    identifier          go to state 81


State 84

   59 return_statement: RETURN EROTIMATIKO .

    $default  reduce using rule 59 (return_statement)


State 85

   75 expression: T_INTEGER .

    $default  reduce using rule 75 (expression)


State 86

   76 expression: T_DOUBLE .

    $default  reduce using rule 76 (expression)


State 87

   77 expression: T_STR .

    $default  reduce using rule 77 (expression)


State 88

   73 expression: RIGHT_PAR . expression LEFT_PAR

    T_VAR      shift, and go to state 8
    T_INTEGER  shift, and go to state 85
    T_DOUBLE   shift, and go to state 86
    T_STR      shift, and go to state 87
    RIGHT_PAR  shift, and go to state 88

    expression  go to state 105
    identifier  go to state 90


State 89

   58 return_statement: RETURN expression . EROTIMATIKO
   61 expression: expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . STAR expression
   64           | expression . SLASH expression
   65           | expression . GREATER_THAN expression
   66           | expression . LESS_THAN expression
   67           | expression . GE_OP expression
   68           | expression . LE_OP expression
   69           | expression . EQ_OP expression
   70           | expression . NE_OP expression
   71           | expression . AND_OP expression
   72           | expression . OR_OP expression

    EQ_OP         shift, and go to state 106
    NE_OP         shift, and go to state 107
    GE_OP         shift, and go to state 108
    LE_OP         shift, and go to state 109
    AND_OP        shift, and go to state 110
    OR_OP         shift, and go to state 111
    EROTIMATIKO   shift, and go to state 112
    GREATER_THAN  shift, and go to state 113
    LESS_THAN     shift, and go to state 114
    PLUS          shift, and go to state 115
    MINUS         shift, and go to state 116
    STAR          shift, and go to state 117
    SLASH         shift, and go to state 118


State 90

   74 expression: identifier .

    $default  reduce using rule 74 (expression)


State 91

   42 if_statement: IF RIGHT_PAR . expression LEFT_PAR RIGHT_BRC opt_statements LEFT_BRC opt_else

    T_VAR      shift, and go to state 8
    T_INTEGER  shift, and go to state 85
    T_DOUBLE   shift, and go to state 86
    T_STR      shift, and go to state 87
    RIGHT_PAR  shift, and go to state 88

    expression  go to state 119
    identifier  go to state 90


State 92

   45 while_statement: WHILE RIGHT_PAR . expression LEFT_PAR RIGHT_PAR opt_statements LEFT_PAR

    T_VAR      shift, and go to state 8
    T_INTEGER  shift, and go to state 85
    T_DOUBLE   shift, and go to state 86
    T_STR      shift, and go to state 87
    RIGHT_PAR  shift, and go to state 88

    expression  go to state 120
    identifier  go to state 90


State 93

   46 do_while_statement: DO RIGHT_BRC . opt_statements LEFT_BRC WHILE RIGHT_PAR expression LEFT_PAR EROTIMATIKO

    PUBLIC      shift, and go to state 11
    PRIVATE     shift, and go to state 12
    INT         shift, and go to state 13
    CHAR        shift, and go to state 14
    DOUBLE      shift, and go to state 15
    BOOLEAN     shift, and go to state 16
    STRING      shift, and go to state 17
    RETURN      shift, and go to state 59
    IF          shift, and go to state 60
    WHILE       shift, and go to state 61
    DO          shift, and go to state 62
    FOR         shift, and go to state 63
    SWITCH      shift, and go to state 64
    BREAK       shift, and go to state 65
    OUTPRINT    shift, and go to state 66
    OUTPRINTLN  shift, and go to state 67
    T_VAR       shift, and go to state 8

    $default  reduce using rule 28 (opt_statements)

    var_decl            go to state 100
    modifier            go to state 20
    type                go to state 21
    opt_statements      go to state 121
    statement_list      go to state 70
    statement           go to state 71
    assignment          go to state 72
    if_statement        go to state 73
    while_statement     go to state 74
    do_while_statement  go to state 75
    for_statement       go to state 76
    switch_statement    go to state 77
    out_print           go to state 78
    return_statement    go to state 79
    break_statement     go to state 80
    identifier          go to state 81


State 94

   47 for_statement: FOR RIGHT_PAR . type assignment expression EROTIMATIKO assignment LEFT_PAR RIGHT_BRC opt_statements LEFT_BRC

    INT      shift, and go to state 13
    CHAR     shift, and go to state 14
    DOUBLE   shift, and go to state 15
    BOOLEAN  shift, and go to state 16
    STRING   shift, and go to state 17

    type  go to state 122


State 95

   48 switch_statement: SWITCH RIGHT_PAR . expression LEFT_PAR RIGHT_BRC case_list opt_default_case LEFT_BRC

    T_VAR      shift, and go to state 8
    T_INTEGER  shift, and go to state 85
    T_DOUBLE   shift, and go to state 86
    T_STR      shift, and go to state 87
    RIGHT_PAR  shift, and go to state 88

    expression  go to state 123
    identifier  go to state 90


State 96

   60 break_statement: BREAK EROTIMATIKO .

    $default  reduce using rule 60 (break_statement)


State 97

   54 out_print: OUTPRINT RIGHT_PAR . QT var_list QT LEFT_PAR EROTIMATIKO

    QT  shift, and go to state 124


State 98

   55 out_print: OUTPRINTLN RIGHT_PAR . QT var_list QT LEFT_PAR EROTIMATIKO

    QT  shift, and go to state 125


State 99

    9 method_decl: identifier RIGHT_PAR param_list LEFT_PAR RIGHT_BRC var_decls opt_statements LEFT_BRC .

    $default  reduce using rule 9 (method_decl)


State 100

   31 statement: var_decl .

    $default  reduce using rule 31 (statement)


State 101

   29 statement_list: statement_list statement .

    $default  reduce using rule 29 (statement_list)


State 102

   41 assignment: identifier EQUALS . expression EROTIMATIKO

    T_VAR      shift, and go to state 8
    T_INTEGER  shift, and go to state 85
    T_DOUBLE   shift, and go to state 86
    T_STR      shift, and go to state 87
    RIGHT_PAR  shift, and go to state 88

    expression  go to state 126
    identifier  go to state 90


State 103

   10 method_decl: modifier VOID identifier RIGHT_PAR param_list LEFT_PAR RIGHT_BRC var_decls opt_statements . LEFT_BRC

    LEFT_BRC  shift, and go to state 127


State 104

    8 method_decl: modifier type identifier RIGHT_PAR param_list LEFT_PAR RIGHT_BRC var_decls opt_statements . LEFT_BRC

    LEFT_BRC  shift, and go to state 128


State 105

   61 expression: expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . STAR expression
   64           | expression . SLASH expression
   65           | expression . GREATER_THAN expression
   66           | expression . LESS_THAN expression
   67           | expression . GE_OP expression
   68           | expression . LE_OP expression
   69           | expression . EQ_OP expression
   70           | expression . NE_OP expression
   71           | expression . AND_OP expression
   72           | expression . OR_OP expression
   73           | RIGHT_PAR expression . LEFT_PAR

    EQ_OP         shift, and go to state 106
    NE_OP         shift, and go to state 107
    GE_OP         shift, and go to state 108
    LE_OP         shift, and go to state 109
    AND_OP        shift, and go to state 110
    OR_OP         shift, and go to state 111
    GREATER_THAN  shift, and go to state 113
    LESS_THAN     shift, and go to state 114
    PLUS          shift, and go to state 115
    MINUS         shift, and go to state 116
    STAR          shift, and go to state 117
    SLASH         shift, and go to state 118
    LEFT_PAR      shift, and go to state 129


State 106

   69 expression: expression EQ_OP . expression

    T_VAR      shift, and go to state 8
    T_INTEGER  shift, and go to state 85
    T_DOUBLE   shift, and go to state 86
    T_STR      shift, and go to state 87
    RIGHT_PAR  shift, and go to state 88

    expression  go to state 130
    identifier  go to state 90


State 107

   70 expression: expression NE_OP . expression

    T_VAR      shift, and go to state 8
    T_INTEGER  shift, and go to state 85
    T_DOUBLE   shift, and go to state 86
    T_STR      shift, and go to state 87
    RIGHT_PAR  shift, and go to state 88

    expression  go to state 131
    identifier  go to state 90


State 108

   67 expression: expression GE_OP . expression

    T_VAR      shift, and go to state 8
    T_INTEGER  shift, and go to state 85
    T_DOUBLE   shift, and go to state 86
    T_STR      shift, and go to state 87
    RIGHT_PAR  shift, and go to state 88

    expression  go to state 132
    identifier  go to state 90


State 109

   68 expression: expression LE_OP . expression

    T_VAR      shift, and go to state 8
    T_INTEGER  shift, and go to state 85
    T_DOUBLE   shift, and go to state 86
    T_STR      shift, and go to state 87
    RIGHT_PAR  shift, and go to state 88

    expression  go to state 133
    identifier  go to state 90


State 110

   71 expression: expression AND_OP . expression

    T_VAR      shift, and go to state 8
    T_INTEGER  shift, and go to state 85
    T_DOUBLE   shift, and go to state 86
    T_STR      shift, and go to state 87
    RIGHT_PAR  shift, and go to state 88

    expression  go to state 134
    identifier  go to state 90


State 111

   72 expression: expression OR_OP . expression

    T_VAR      shift, and go to state 8
    T_INTEGER  shift, and go to state 85
    T_DOUBLE   shift, and go to state 86
    T_STR      shift, and go to state 87
    RIGHT_PAR  shift, and go to state 88

    expression  go to state 135
    identifier  go to state 90


State 112

   58 return_statement: RETURN expression EROTIMATIKO .

    $default  reduce using rule 58 (return_statement)


State 113

   65 expression: expression GREATER_THAN . expression

    T_VAR      shift, and go to state 8
    T_INTEGER  shift, and go to state 85
    T_DOUBLE   shift, and go to state 86
    T_STR      shift, and go to state 87
    RIGHT_PAR  shift, and go to state 88

    expression  go to state 136
    identifier  go to state 90


State 114

   66 expression: expression LESS_THAN . expression

    T_VAR      shift, and go to state 8
    T_INTEGER  shift, and go to state 85
    T_DOUBLE   shift, and go to state 86
    T_STR      shift, and go to state 87
    RIGHT_PAR  shift, and go to state 88

    expression  go to state 137
    identifier  go to state 90


State 115

   61 expression: expression PLUS . expression

    T_VAR      shift, and go to state 8
    T_INTEGER  shift, and go to state 85
    T_DOUBLE   shift, and go to state 86
    T_STR      shift, and go to state 87
    RIGHT_PAR  shift, and go to state 88

    expression  go to state 138
    identifier  go to state 90


State 116

   62 expression: expression MINUS . expression

    T_VAR      shift, and go to state 8
    T_INTEGER  shift, and go to state 85
    T_DOUBLE   shift, and go to state 86
    T_STR      shift, and go to state 87
    RIGHT_PAR  shift, and go to state 88

    expression  go to state 139
    identifier  go to state 90


State 117

   63 expression: expression STAR . expression

    T_VAR      shift, and go to state 8
    T_INTEGER  shift, and go to state 85
    T_DOUBLE   shift, and go to state 86
    T_STR      shift, and go to state 87
    RIGHT_PAR  shift, and go to state 88

    expression  go to state 140
    identifier  go to state 90


State 118

   64 expression: expression SLASH . expression

    T_VAR      shift, and go to state 8
    T_INTEGER  shift, and go to state 85
    T_DOUBLE   shift, and go to state 86
    T_STR      shift, and go to state 87
    RIGHT_PAR  shift, and go to state 88

    expression  go to state 141
    identifier  go to state 90


State 119

   42 if_statement: IF RIGHT_PAR expression . LEFT_PAR RIGHT_BRC opt_statements LEFT_BRC opt_else
   61 expression: expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . STAR expression
   64           | expression . SLASH expression
   65           | expression . GREATER_THAN expression
   66           | expression . LESS_THAN expression
   67           | expression . GE_OP expression
   68           | expression . LE_OP expression
   69           | expression . EQ_OP expression
   70           | expression . NE_OP expression
   71           | expression . AND_OP expression
   72           | expression . OR_OP expression

    EQ_OP         shift, and go to state 106
    NE_OP         shift, and go to state 107
    GE_OP         shift, and go to state 108
    LE_OP         shift, and go to state 109
    AND_OP        shift, and go to state 110
    OR_OP         shift, and go to state 111
    GREATER_THAN  shift, and go to state 113
    LESS_THAN     shift, and go to state 114
    PLUS          shift, and go to state 115
    MINUS         shift, and go to state 116
    STAR          shift, and go to state 117
    SLASH         shift, and go to state 118
    LEFT_PAR      shift, and go to state 142


State 120

   45 while_statement: WHILE RIGHT_PAR expression . LEFT_PAR RIGHT_PAR opt_statements LEFT_PAR
   61 expression: expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . STAR expression
   64           | expression . SLASH expression
   65           | expression . GREATER_THAN expression
   66           | expression . LESS_THAN expression
   67           | expression . GE_OP expression
   68           | expression . LE_OP expression
   69           | expression . EQ_OP expression
   70           | expression . NE_OP expression
   71           | expression . AND_OP expression
   72           | expression . OR_OP expression

    EQ_OP         shift, and go to state 106
    NE_OP         shift, and go to state 107
    GE_OP         shift, and go to state 108
    LE_OP         shift, and go to state 109
    AND_OP        shift, and go to state 110
    OR_OP         shift, and go to state 111
    GREATER_THAN  shift, and go to state 113
    LESS_THAN     shift, and go to state 114
    PLUS          shift, and go to state 115
    MINUS         shift, and go to state 116
    STAR          shift, and go to state 117
    SLASH         shift, and go to state 118
    LEFT_PAR      shift, and go to state 143


State 121

   46 do_while_statement: DO RIGHT_BRC opt_statements . LEFT_BRC WHILE RIGHT_PAR expression LEFT_PAR EROTIMATIKO

    LEFT_BRC  shift, and go to state 144


State 122

   47 for_statement: FOR RIGHT_PAR type . assignment expression EROTIMATIKO assignment LEFT_PAR RIGHT_BRC opt_statements LEFT_BRC

    T_VAR  shift, and go to state 8

    assignment  go to state 145
    identifier  go to state 81


State 123

   48 switch_statement: SWITCH RIGHT_PAR expression . LEFT_PAR RIGHT_BRC case_list opt_default_case LEFT_BRC
   61 expression: expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . STAR expression
   64           | expression . SLASH expression
   65           | expression . GREATER_THAN expression
   66           | expression . LESS_THAN expression
   67           | expression . GE_OP expression
   68           | expression . LE_OP expression
   69           | expression . EQ_OP expression
   70           | expression . NE_OP expression
   71           | expression . AND_OP expression
   72           | expression . OR_OP expression

    EQ_OP         shift, and go to state 106
    NE_OP         shift, and go to state 107
    GE_OP         shift, and go to state 108
    LE_OP         shift, and go to state 109
    AND_OP        shift, and go to state 110
    OR_OP         shift, and go to state 111
    GREATER_THAN  shift, and go to state 113
    LESS_THAN     shift, and go to state 114
    PLUS          shift, and go to state 115
    MINUS         shift, and go to state 116
    STAR          shift, and go to state 117
    SLASH         shift, and go to state 118
    LEFT_PAR      shift, and go to state 146


State 124

   54 out_print: OUTPRINT RIGHT_PAR QT . var_list QT LEFT_PAR EROTIMATIKO

    T_VAR  shift, and go to state 147

    var_list  go to state 148


State 125

   55 out_print: OUTPRINTLN RIGHT_PAR QT . var_list QT LEFT_PAR EROTIMATIKO

    T_VAR  shift, and go to state 147

    var_list  go to state 149


State 126

   41 assignment: identifier EQUALS expression . EROTIMATIKO
   61 expression: expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . STAR expression
   64           | expression . SLASH expression
   65           | expression . GREATER_THAN expression
   66           | expression . LESS_THAN expression
   67           | expression . GE_OP expression
   68           | expression . LE_OP expression
   69           | expression . EQ_OP expression
   70           | expression . NE_OP expression
   71           | expression . AND_OP expression
   72           | expression . OR_OP expression

    EQ_OP         shift, and go to state 106
    NE_OP         shift, and go to state 107
    GE_OP         shift, and go to state 108
    LE_OP         shift, and go to state 109
    AND_OP        shift, and go to state 110
    OR_OP         shift, and go to state 111
    EROTIMATIKO   shift, and go to state 150
    GREATER_THAN  shift, and go to state 113
    LESS_THAN     shift, and go to state 114
    PLUS          shift, and go to state 115
    MINUS         shift, and go to state 116
    STAR          shift, and go to state 117
    SLASH         shift, and go to state 118


State 127

   10 method_decl: modifier VOID identifier RIGHT_PAR param_list LEFT_PAR RIGHT_BRC var_decls opt_statements LEFT_BRC .

    $default  reduce using rule 10 (method_decl)


State 128

    8 method_decl: modifier type identifier RIGHT_PAR param_list LEFT_PAR RIGHT_BRC var_decls opt_statements LEFT_BRC .

    $default  reduce using rule 8 (method_decl)


State 129

   73 expression: RIGHT_PAR expression LEFT_PAR .

    $default  reduce using rule 73 (expression)


State 130

   61 expression: expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . STAR expression
   64           | expression . SLASH expression
   65           | expression . GREATER_THAN expression
   66           | expression . LESS_THAN expression
   67           | expression . GE_OP expression
   68           | expression . LE_OP expression
   69           | expression . EQ_OP expression
   69           | expression EQ_OP expression .
   70           | expression . NE_OP expression
   71           | expression . AND_OP expression
   72           | expression . OR_OP expression

    EQ_OP         shift, and go to state 106
    NE_OP         shift, and go to state 107
    GE_OP         shift, and go to state 108
    LE_OP         shift, and go to state 109
    AND_OP        shift, and go to state 110
    OR_OP         shift, and go to state 111
    GREATER_THAN  shift, and go to state 113
    LESS_THAN     shift, and go to state 114
    PLUS          shift, and go to state 115
    MINUS         shift, and go to state 116
    STAR          shift, and go to state 117
    SLASH         shift, and go to state 118

    EQ_OP         [reduce using rule 69 (expression)]
    NE_OP         [reduce using rule 69 (expression)]
    GE_OP         [reduce using rule 69 (expression)]
    LE_OP         [reduce using rule 69 (expression)]
    AND_OP        [reduce using rule 69 (expression)]
    OR_OP         [reduce using rule 69 (expression)]
    GREATER_THAN  [reduce using rule 69 (expression)]
    LESS_THAN     [reduce using rule 69 (expression)]
    PLUS          [reduce using rule 69 (expression)]
    MINUS         [reduce using rule 69 (expression)]
    STAR          [reduce using rule 69 (expression)]
    SLASH         [reduce using rule 69 (expression)]
    $default      reduce using rule 69 (expression)


State 131

   61 expression: expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . STAR expression
   64           | expression . SLASH expression
   65           | expression . GREATER_THAN expression
   66           | expression . LESS_THAN expression
   67           | expression . GE_OP expression
   68           | expression . LE_OP expression
   69           | expression . EQ_OP expression
   70           | expression . NE_OP expression
   70           | expression NE_OP expression .
   71           | expression . AND_OP expression
   72           | expression . OR_OP expression

    EQ_OP         shift, and go to state 106
    NE_OP         shift, and go to state 107
    GE_OP         shift, and go to state 108
    LE_OP         shift, and go to state 109
    AND_OP        shift, and go to state 110
    OR_OP         shift, and go to state 111
    GREATER_THAN  shift, and go to state 113
    LESS_THAN     shift, and go to state 114
    PLUS          shift, and go to state 115
    MINUS         shift, and go to state 116
    STAR          shift, and go to state 117
    SLASH         shift, and go to state 118

    EQ_OP         [reduce using rule 70 (expression)]
    NE_OP         [reduce using rule 70 (expression)]
    GE_OP         [reduce using rule 70 (expression)]
    LE_OP         [reduce using rule 70 (expression)]
    AND_OP        [reduce using rule 70 (expression)]
    OR_OP         [reduce using rule 70 (expression)]
    GREATER_THAN  [reduce using rule 70 (expression)]
    LESS_THAN     [reduce using rule 70 (expression)]
    PLUS          [reduce using rule 70 (expression)]
    MINUS         [reduce using rule 70 (expression)]
    STAR          [reduce using rule 70 (expression)]
    SLASH         [reduce using rule 70 (expression)]
    $default      reduce using rule 70 (expression)


State 132

   61 expression: expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . STAR expression
   64           | expression . SLASH expression
   65           | expression . GREATER_THAN expression
   66           | expression . LESS_THAN expression
   67           | expression . GE_OP expression
   67           | expression GE_OP expression .
   68           | expression . LE_OP expression
   69           | expression . EQ_OP expression
   70           | expression . NE_OP expression
   71           | expression . AND_OP expression
   72           | expression . OR_OP expression

    EQ_OP         shift, and go to state 106
    NE_OP         shift, and go to state 107
    GE_OP         shift, and go to state 108
    LE_OP         shift, and go to state 109
    AND_OP        shift, and go to state 110
    OR_OP         shift, and go to state 111
    GREATER_THAN  shift, and go to state 113
    LESS_THAN     shift, and go to state 114
    PLUS          shift, and go to state 115
    MINUS         shift, and go to state 116
    STAR          shift, and go to state 117
    SLASH         shift, and go to state 118

    EQ_OP         [reduce using rule 67 (expression)]
    NE_OP         [reduce using rule 67 (expression)]
    GE_OP         [reduce using rule 67 (expression)]
    LE_OP         [reduce using rule 67 (expression)]
    AND_OP        [reduce using rule 67 (expression)]
    OR_OP         [reduce using rule 67 (expression)]
    GREATER_THAN  [reduce using rule 67 (expression)]
    LESS_THAN     [reduce using rule 67 (expression)]
    PLUS          [reduce using rule 67 (expression)]
    MINUS         [reduce using rule 67 (expression)]
    STAR          [reduce using rule 67 (expression)]
    SLASH         [reduce using rule 67 (expression)]
    $default      reduce using rule 67 (expression)


State 133

   61 expression: expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . STAR expression
   64           | expression . SLASH expression
   65           | expression . GREATER_THAN expression
   66           | expression . LESS_THAN expression
   67           | expression . GE_OP expression
   68           | expression . LE_OP expression
   68           | expression LE_OP expression .
   69           | expression . EQ_OP expression
   70           | expression . NE_OP expression
   71           | expression . AND_OP expression
   72           | expression . OR_OP expression

    EQ_OP         shift, and go to state 106
    NE_OP         shift, and go to state 107
    GE_OP         shift, and go to state 108
    LE_OP         shift, and go to state 109
    AND_OP        shift, and go to state 110
    OR_OP         shift, and go to state 111
    GREATER_THAN  shift, and go to state 113
    LESS_THAN     shift, and go to state 114
    PLUS          shift, and go to state 115
    MINUS         shift, and go to state 116
    STAR          shift, and go to state 117
    SLASH         shift, and go to state 118

    EQ_OP         [reduce using rule 68 (expression)]
    NE_OP         [reduce using rule 68 (expression)]
    GE_OP         [reduce using rule 68 (expression)]
    LE_OP         [reduce using rule 68 (expression)]
    AND_OP        [reduce using rule 68 (expression)]
    OR_OP         [reduce using rule 68 (expression)]
    GREATER_THAN  [reduce using rule 68 (expression)]
    LESS_THAN     [reduce using rule 68 (expression)]
    PLUS          [reduce using rule 68 (expression)]
    MINUS         [reduce using rule 68 (expression)]
    STAR          [reduce using rule 68 (expression)]
    SLASH         [reduce using rule 68 (expression)]
    $default      reduce using rule 68 (expression)


State 134

   61 expression: expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . STAR expression
   64           | expression . SLASH expression
   65           | expression . GREATER_THAN expression
   66           | expression . LESS_THAN expression
   67           | expression . GE_OP expression
   68           | expression . LE_OP expression
   69           | expression . EQ_OP expression
   70           | expression . NE_OP expression
   71           | expression . AND_OP expression
   71           | expression AND_OP expression .
   72           | expression . OR_OP expression

    EQ_OP         shift, and go to state 106
    NE_OP         shift, and go to state 107
    GE_OP         shift, and go to state 108
    LE_OP         shift, and go to state 109
    AND_OP        shift, and go to state 110
    OR_OP         shift, and go to state 111
    GREATER_THAN  shift, and go to state 113
    LESS_THAN     shift, and go to state 114
    PLUS          shift, and go to state 115
    MINUS         shift, and go to state 116
    STAR          shift, and go to state 117
    SLASH         shift, and go to state 118

    EQ_OP         [reduce using rule 71 (expression)]
    NE_OP         [reduce using rule 71 (expression)]
    GE_OP         [reduce using rule 71 (expression)]
    LE_OP         [reduce using rule 71 (expression)]
    AND_OP        [reduce using rule 71 (expression)]
    OR_OP         [reduce using rule 71 (expression)]
    GREATER_THAN  [reduce using rule 71 (expression)]
    LESS_THAN     [reduce using rule 71 (expression)]
    PLUS          [reduce using rule 71 (expression)]
    MINUS         [reduce using rule 71 (expression)]
    STAR          [reduce using rule 71 (expression)]
    SLASH         [reduce using rule 71 (expression)]
    $default      reduce using rule 71 (expression)


State 135

   61 expression: expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . STAR expression
   64           | expression . SLASH expression
   65           | expression . GREATER_THAN expression
   66           | expression . LESS_THAN expression
   67           | expression . GE_OP expression
   68           | expression . LE_OP expression
   69           | expression . EQ_OP expression
   70           | expression . NE_OP expression
   71           | expression . AND_OP expression
   72           | expression . OR_OP expression
   72           | expression OR_OP expression .

    EQ_OP         shift, and go to state 106
    NE_OP         shift, and go to state 107
    GE_OP         shift, and go to state 108
    LE_OP         shift, and go to state 109
    AND_OP        shift, and go to state 110
    OR_OP         shift, and go to state 111
    GREATER_THAN  shift, and go to state 113
    LESS_THAN     shift, and go to state 114
    PLUS          shift, and go to state 115
    MINUS         shift, and go to state 116
    STAR          shift, and go to state 117
    SLASH         shift, and go to state 118

    EQ_OP         [reduce using rule 72 (expression)]
    NE_OP         [reduce using rule 72 (expression)]
    GE_OP         [reduce using rule 72 (expression)]
    LE_OP         [reduce using rule 72 (expression)]
    AND_OP        [reduce using rule 72 (expression)]
    OR_OP         [reduce using rule 72 (expression)]
    GREATER_THAN  [reduce using rule 72 (expression)]
    LESS_THAN     [reduce using rule 72 (expression)]
    PLUS          [reduce using rule 72 (expression)]
    MINUS         [reduce using rule 72 (expression)]
    STAR          [reduce using rule 72 (expression)]
    SLASH         [reduce using rule 72 (expression)]
    $default      reduce using rule 72 (expression)


State 136

   61 expression: expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . STAR expression
   64           | expression . SLASH expression
   65           | expression . GREATER_THAN expression
   65           | expression GREATER_THAN expression .
   66           | expression . LESS_THAN expression
   67           | expression . GE_OP expression
   68           | expression . LE_OP expression
   69           | expression . EQ_OP expression
   70           | expression . NE_OP expression
   71           | expression . AND_OP expression
   72           | expression . OR_OP expression

    EQ_OP         shift, and go to state 106
    NE_OP         shift, and go to state 107
    GE_OP         shift, and go to state 108
    LE_OP         shift, and go to state 109
    AND_OP        shift, and go to state 110
    OR_OP         shift, and go to state 111
    GREATER_THAN  shift, and go to state 113
    LESS_THAN     shift, and go to state 114
    PLUS          shift, and go to state 115
    MINUS         shift, and go to state 116
    STAR          shift, and go to state 117
    SLASH         shift, and go to state 118

    EQ_OP         [reduce using rule 65 (expression)]
    NE_OP         [reduce using rule 65 (expression)]
    GE_OP         [reduce using rule 65 (expression)]
    LE_OP         [reduce using rule 65 (expression)]
    AND_OP        [reduce using rule 65 (expression)]
    OR_OP         [reduce using rule 65 (expression)]
    GREATER_THAN  [reduce using rule 65 (expression)]
    LESS_THAN     [reduce using rule 65 (expression)]
    PLUS          [reduce using rule 65 (expression)]
    MINUS         [reduce using rule 65 (expression)]
    STAR          [reduce using rule 65 (expression)]
    SLASH         [reduce using rule 65 (expression)]
    $default      reduce using rule 65 (expression)


State 137

   61 expression: expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . STAR expression
   64           | expression . SLASH expression
   65           | expression . GREATER_THAN expression
   66           | expression . LESS_THAN expression
   66           | expression LESS_THAN expression .
   67           | expression . GE_OP expression
   68           | expression . LE_OP expression
   69           | expression . EQ_OP expression
   70           | expression . NE_OP expression
   71           | expression . AND_OP expression
   72           | expression . OR_OP expression

    EQ_OP         shift, and go to state 106
    NE_OP         shift, and go to state 107
    GE_OP         shift, and go to state 108
    LE_OP         shift, and go to state 109
    AND_OP        shift, and go to state 110
    OR_OP         shift, and go to state 111
    GREATER_THAN  shift, and go to state 113
    LESS_THAN     shift, and go to state 114
    PLUS          shift, and go to state 115
    MINUS         shift, and go to state 116
    STAR          shift, and go to state 117
    SLASH         shift, and go to state 118

    EQ_OP         [reduce using rule 66 (expression)]
    NE_OP         [reduce using rule 66 (expression)]
    GE_OP         [reduce using rule 66 (expression)]
    LE_OP         [reduce using rule 66 (expression)]
    AND_OP        [reduce using rule 66 (expression)]
    OR_OP         [reduce using rule 66 (expression)]
    GREATER_THAN  [reduce using rule 66 (expression)]
    LESS_THAN     [reduce using rule 66 (expression)]
    PLUS          [reduce using rule 66 (expression)]
    MINUS         [reduce using rule 66 (expression)]
    STAR          [reduce using rule 66 (expression)]
    SLASH         [reduce using rule 66 (expression)]
    $default      reduce using rule 66 (expression)


State 138

   61 expression: expression . PLUS expression
   61           | expression PLUS expression .
   62           | expression . MINUS expression
   63           | expression . STAR expression
   64           | expression . SLASH expression
   65           | expression . GREATER_THAN expression
   66           | expression . LESS_THAN expression
   67           | expression . GE_OP expression
   68           | expression . LE_OP expression
   69           | expression . EQ_OP expression
   70           | expression . NE_OP expression
   71           | expression . AND_OP expression
   72           | expression . OR_OP expression

    EQ_OP         shift, and go to state 106
    NE_OP         shift, and go to state 107
    GE_OP         shift, and go to state 108
    LE_OP         shift, and go to state 109
    AND_OP        shift, and go to state 110
    OR_OP         shift, and go to state 111
    GREATER_THAN  shift, and go to state 113
    LESS_THAN     shift, and go to state 114
    PLUS          shift, and go to state 115
    MINUS         shift, and go to state 116
    STAR          shift, and go to state 117
    SLASH         shift, and go to state 118

    EQ_OP         [reduce using rule 61 (expression)]
    NE_OP         [reduce using rule 61 (expression)]
    GE_OP         [reduce using rule 61 (expression)]
    LE_OP         [reduce using rule 61 (expression)]
    AND_OP        [reduce using rule 61 (expression)]
    OR_OP         [reduce using rule 61 (expression)]
    GREATER_THAN  [reduce using rule 61 (expression)]
    LESS_THAN     [reduce using rule 61 (expression)]
    PLUS          [reduce using rule 61 (expression)]
    MINUS         [reduce using rule 61 (expression)]
    STAR          [reduce using rule 61 (expression)]
    SLASH         [reduce using rule 61 (expression)]
    $default      reduce using rule 61 (expression)


State 139

   61 expression: expression . PLUS expression
   62           | expression . MINUS expression
   62           | expression MINUS expression .
   63           | expression . STAR expression
   64           | expression . SLASH expression
   65           | expression . GREATER_THAN expression
   66           | expression . LESS_THAN expression
   67           | expression . GE_OP expression
   68           | expression . LE_OP expression
   69           | expression . EQ_OP expression
   70           | expression . NE_OP expression
   71           | expression . AND_OP expression
   72           | expression . OR_OP expression

    EQ_OP         shift, and go to state 106
    NE_OP         shift, and go to state 107
    GE_OP         shift, and go to state 108
    LE_OP         shift, and go to state 109
    AND_OP        shift, and go to state 110
    OR_OP         shift, and go to state 111
    GREATER_THAN  shift, and go to state 113
    LESS_THAN     shift, and go to state 114
    PLUS          shift, and go to state 115
    MINUS         shift, and go to state 116
    STAR          shift, and go to state 117
    SLASH         shift, and go to state 118

    EQ_OP         [reduce using rule 62 (expression)]
    NE_OP         [reduce using rule 62 (expression)]
    GE_OP         [reduce using rule 62 (expression)]
    LE_OP         [reduce using rule 62 (expression)]
    AND_OP        [reduce using rule 62 (expression)]
    OR_OP         [reduce using rule 62 (expression)]
    GREATER_THAN  [reduce using rule 62 (expression)]
    LESS_THAN     [reduce using rule 62 (expression)]
    PLUS          [reduce using rule 62 (expression)]
    MINUS         [reduce using rule 62 (expression)]
    STAR          [reduce using rule 62 (expression)]
    SLASH         [reduce using rule 62 (expression)]
    $default      reduce using rule 62 (expression)


State 140

   61 expression: expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . STAR expression
   63           | expression STAR expression .
   64           | expression . SLASH expression
   65           | expression . GREATER_THAN expression
   66           | expression . LESS_THAN expression
   67           | expression . GE_OP expression
   68           | expression . LE_OP expression
   69           | expression . EQ_OP expression
   70           | expression . NE_OP expression
   71           | expression . AND_OP expression
   72           | expression . OR_OP expression

    EQ_OP         shift, and go to state 106
    NE_OP         shift, and go to state 107
    GE_OP         shift, and go to state 108
    LE_OP         shift, and go to state 109
    AND_OP        shift, and go to state 110
    OR_OP         shift, and go to state 111
    GREATER_THAN  shift, and go to state 113
    LESS_THAN     shift, and go to state 114
    PLUS          shift, and go to state 115
    MINUS         shift, and go to state 116
    STAR          shift, and go to state 117
    SLASH         shift, and go to state 118

    EQ_OP         [reduce using rule 63 (expression)]
    NE_OP         [reduce using rule 63 (expression)]
    GE_OP         [reduce using rule 63 (expression)]
    LE_OP         [reduce using rule 63 (expression)]
    AND_OP        [reduce using rule 63 (expression)]
    OR_OP         [reduce using rule 63 (expression)]
    GREATER_THAN  [reduce using rule 63 (expression)]
    LESS_THAN     [reduce using rule 63 (expression)]
    PLUS          [reduce using rule 63 (expression)]
    MINUS         [reduce using rule 63 (expression)]
    STAR          [reduce using rule 63 (expression)]
    SLASH         [reduce using rule 63 (expression)]
    $default      reduce using rule 63 (expression)


State 141

   61 expression: expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . STAR expression
   64           | expression . SLASH expression
   64           | expression SLASH expression .
   65           | expression . GREATER_THAN expression
   66           | expression . LESS_THAN expression
   67           | expression . GE_OP expression
   68           | expression . LE_OP expression
   69           | expression . EQ_OP expression
   70           | expression . NE_OP expression
   71           | expression . AND_OP expression
   72           | expression . OR_OP expression

    EQ_OP         shift, and go to state 106
    NE_OP         shift, and go to state 107
    GE_OP         shift, and go to state 108
    LE_OP         shift, and go to state 109
    AND_OP        shift, and go to state 110
    OR_OP         shift, and go to state 111
    GREATER_THAN  shift, and go to state 113
    LESS_THAN     shift, and go to state 114
    PLUS          shift, and go to state 115
    MINUS         shift, and go to state 116
    STAR          shift, and go to state 117
    SLASH         shift, and go to state 118

    EQ_OP         [reduce using rule 64 (expression)]
    NE_OP         [reduce using rule 64 (expression)]
    GE_OP         [reduce using rule 64 (expression)]
    LE_OP         [reduce using rule 64 (expression)]
    AND_OP        [reduce using rule 64 (expression)]
    OR_OP         [reduce using rule 64 (expression)]
    GREATER_THAN  [reduce using rule 64 (expression)]
    LESS_THAN     [reduce using rule 64 (expression)]
    PLUS          [reduce using rule 64 (expression)]
    MINUS         [reduce using rule 64 (expression)]
    STAR          [reduce using rule 64 (expression)]
    SLASH         [reduce using rule 64 (expression)]
    $default      reduce using rule 64 (expression)


State 142

   42 if_statement: IF RIGHT_PAR expression LEFT_PAR . RIGHT_BRC opt_statements LEFT_BRC opt_else

    RIGHT_BRC  shift, and go to state 151


State 143

   45 while_statement: WHILE RIGHT_PAR expression LEFT_PAR . RIGHT_PAR opt_statements LEFT_PAR

    RIGHT_PAR  shift, and go to state 152


State 144

   46 do_while_statement: DO RIGHT_BRC opt_statements LEFT_BRC . WHILE RIGHT_PAR expression LEFT_PAR EROTIMATIKO

    WHILE  shift, and go to state 153


State 145

   47 for_statement: FOR RIGHT_PAR type assignment . expression EROTIMATIKO assignment LEFT_PAR RIGHT_BRC opt_statements LEFT_BRC

    T_VAR      shift, and go to state 8
    T_INTEGER  shift, and go to state 85
    T_DOUBLE   shift, and go to state 86
    T_STR      shift, and go to state 87
    RIGHT_PAR  shift, and go to state 88

    expression  go to state 154
    identifier  go to state 90


State 146

   48 switch_statement: SWITCH RIGHT_PAR expression LEFT_PAR . RIGHT_BRC case_list opt_default_case LEFT_BRC

    RIGHT_BRC  shift, and go to state 155


State 147

   57 var_list: T_VAR .

    $default  reduce using rule 57 (var_list)


State 148

   54 out_print: OUTPRINT RIGHT_PAR QT var_list . QT LEFT_PAR EROTIMATIKO
   56 var_list: var_list . T_VAR

    T_VAR  shift, and go to state 156
    QT     shift, and go to state 157


State 149

   55 out_print: OUTPRINTLN RIGHT_PAR QT var_list . QT LEFT_PAR EROTIMATIKO
   56 var_list: var_list . T_VAR

    T_VAR  shift, and go to state 156
    QT     shift, and go to state 158


State 150

   41 assignment: identifier EQUALS expression EROTIMATIKO .

    $default  reduce using rule 41 (assignment)


State 151

   42 if_statement: IF RIGHT_PAR expression LEFT_PAR RIGHT_BRC . opt_statements LEFT_BRC opt_else

    PUBLIC      shift, and go to state 11
    PRIVATE     shift, and go to state 12
    INT         shift, and go to state 13
    CHAR        shift, and go to state 14
    DOUBLE      shift, and go to state 15
    BOOLEAN     shift, and go to state 16
    STRING      shift, and go to state 17
    RETURN      shift, and go to state 59
    IF          shift, and go to state 60
    WHILE       shift, and go to state 61
    DO          shift, and go to state 62
    FOR         shift, and go to state 63
    SWITCH      shift, and go to state 64
    BREAK       shift, and go to state 65
    OUTPRINT    shift, and go to state 66
    OUTPRINTLN  shift, and go to state 67
    T_VAR       shift, and go to state 8

    $default  reduce using rule 28 (opt_statements)

    var_decl            go to state 100
    modifier            go to state 20
    type                go to state 21
    opt_statements      go to state 159
    statement_list      go to state 70
    statement           go to state 71
    assignment          go to state 72
    if_statement        go to state 73
    while_statement     go to state 74
    do_while_statement  go to state 75
    for_statement       go to state 76
    switch_statement    go to state 77
    out_print           go to state 78
    return_statement    go to state 79
    break_statement     go to state 80
    identifier          go to state 81


State 152

   45 while_statement: WHILE RIGHT_PAR expression LEFT_PAR RIGHT_PAR . opt_statements LEFT_PAR

    PUBLIC      shift, and go to state 11
    PRIVATE     shift, and go to state 12
    INT         shift, and go to state 13
    CHAR        shift, and go to state 14
    DOUBLE      shift, and go to state 15
    BOOLEAN     shift, and go to state 16
    STRING      shift, and go to state 17
    RETURN      shift, and go to state 59
    IF          shift, and go to state 60
    WHILE       shift, and go to state 61
    DO          shift, and go to state 62
    FOR         shift, and go to state 63
    SWITCH      shift, and go to state 64
    BREAK       shift, and go to state 65
    OUTPRINT    shift, and go to state 66
    OUTPRINTLN  shift, and go to state 67
    T_VAR       shift, and go to state 8

    $default  reduce using rule 28 (opt_statements)

    var_decl            go to state 100
    modifier            go to state 20
    type                go to state 21
    opt_statements      go to state 160
    statement_list      go to state 70
    statement           go to state 71
    assignment          go to state 72
    if_statement        go to state 73
    while_statement     go to state 74
    do_while_statement  go to state 75
    for_statement       go to state 76
    switch_statement    go to state 77
    out_print           go to state 78
    return_statement    go to state 79
    break_statement     go to state 80
    identifier          go to state 81


State 153

   46 do_while_statement: DO RIGHT_BRC opt_statements LEFT_BRC WHILE . RIGHT_PAR expression LEFT_PAR EROTIMATIKO

    RIGHT_PAR  shift, and go to state 161


State 154

   47 for_statement: FOR RIGHT_PAR type assignment expression . EROTIMATIKO assignment LEFT_PAR RIGHT_BRC opt_statements LEFT_BRC
   61 expression: expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . STAR expression
   64           | expression . SLASH expression
   65           | expression . GREATER_THAN expression
   66           | expression . LESS_THAN expression
   67           | expression . GE_OP expression
   68           | expression . LE_OP expression
   69           | expression . EQ_OP expression
   70           | expression . NE_OP expression
   71           | expression . AND_OP expression
   72           | expression . OR_OP expression

    EQ_OP         shift, and go to state 106
    NE_OP         shift, and go to state 107
    GE_OP         shift, and go to state 108
    LE_OP         shift, and go to state 109
    AND_OP        shift, and go to state 110
    OR_OP         shift, and go to state 111
    EROTIMATIKO   shift, and go to state 162
    GREATER_THAN  shift, and go to state 113
    LESS_THAN     shift, and go to state 114
    PLUS          shift, and go to state 115
    MINUS         shift, and go to state 116
    STAR          shift, and go to state 117
    SLASH         shift, and go to state 118


State 155

   48 switch_statement: SWITCH RIGHT_PAR expression LEFT_PAR RIGHT_BRC . case_list opt_default_case LEFT_BRC

    CASE  shift, and go to state 163

    case_list    go to state 164
    case_clause  go to state 165


State 156

   56 var_list: var_list T_VAR .

    $default  reduce using rule 56 (var_list)


State 157

   54 out_print: OUTPRINT RIGHT_PAR QT var_list QT . LEFT_PAR EROTIMATIKO

    LEFT_PAR  shift, and go to state 166


State 158

   55 out_print: OUTPRINTLN RIGHT_PAR QT var_list QT . LEFT_PAR EROTIMATIKO

    LEFT_PAR  shift, and go to state 167


State 159

   42 if_statement: IF RIGHT_PAR expression LEFT_PAR RIGHT_BRC opt_statements . LEFT_BRC opt_else

    LEFT_BRC  shift, and go to state 168


State 160

   45 while_statement: WHILE RIGHT_PAR expression LEFT_PAR RIGHT_PAR opt_statements . LEFT_PAR

    LEFT_PAR  shift, and go to state 169


State 161

   46 do_while_statement: DO RIGHT_BRC opt_statements LEFT_BRC WHILE RIGHT_PAR . expression LEFT_PAR EROTIMATIKO

    T_VAR      shift, and go to state 8
    T_INTEGER  shift, and go to state 85
    T_DOUBLE   shift, and go to state 86
    T_STR      shift, and go to state 87
    RIGHT_PAR  shift, and go to state 88

    expression  go to state 170
    identifier  go to state 90


State 162

   47 for_statement: FOR RIGHT_PAR type assignment expression EROTIMATIKO . assignment LEFT_PAR RIGHT_BRC opt_statements LEFT_BRC

    T_VAR  shift, and go to state 8

    assignment  go to state 171
    identifier  go to state 81


State 163

   51 case_clause: CASE . expression COLON opt_statements

    T_VAR      shift, and go to state 8
    T_INTEGER  shift, and go to state 85
    T_DOUBLE   shift, and go to state 86
    T_STR      shift, and go to state 87
    RIGHT_PAR  shift, and go to state 88

    expression  go to state 172
    identifier  go to state 90


State 164

   48 switch_statement: SWITCH RIGHT_PAR expression LEFT_PAR RIGHT_BRC case_list . opt_default_case LEFT_BRC
   49 case_list: case_list . case_clause

    CASE     shift, and go to state 163
    DEFAULT  shift, and go to state 173

    $default  reduce using rule 53 (opt_default_case)

    case_clause       go to state 174
    opt_default_case  go to state 175


State 165

   50 case_list: case_clause .

    $default  reduce using rule 50 (case_list)


State 166

   54 out_print: OUTPRINT RIGHT_PAR QT var_list QT LEFT_PAR . EROTIMATIKO

    EROTIMATIKO  shift, and go to state 176


State 167

   55 out_print: OUTPRINTLN RIGHT_PAR QT var_list QT LEFT_PAR . EROTIMATIKO

    EROTIMATIKO  shift, and go to state 177


State 168

   42 if_statement: IF RIGHT_PAR expression LEFT_PAR RIGHT_BRC opt_statements LEFT_BRC . opt_else

    ELSE  shift, and go to state 178

    $default  reduce using rule 44 (opt_else)

    opt_else  go to state 179


State 169

   45 while_statement: WHILE RIGHT_PAR expression LEFT_PAR RIGHT_PAR opt_statements LEFT_PAR .

    $default  reduce using rule 45 (while_statement)


State 170

   46 do_while_statement: DO RIGHT_BRC opt_statements LEFT_BRC WHILE RIGHT_PAR expression . LEFT_PAR EROTIMATIKO
   61 expression: expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . STAR expression
   64           | expression . SLASH expression
   65           | expression . GREATER_THAN expression
   66           | expression . LESS_THAN expression
   67           | expression . GE_OP expression
   68           | expression . LE_OP expression
   69           | expression . EQ_OP expression
   70           | expression . NE_OP expression
   71           | expression . AND_OP expression
   72           | expression . OR_OP expression

    EQ_OP         shift, and go to state 106
    NE_OP         shift, and go to state 107
    GE_OP         shift, and go to state 108
    LE_OP         shift, and go to state 109
    AND_OP        shift, and go to state 110
    OR_OP         shift, and go to state 111
    GREATER_THAN  shift, and go to state 113
    LESS_THAN     shift, and go to state 114
    PLUS          shift, and go to state 115
    MINUS         shift, and go to state 116
    STAR          shift, and go to state 117
    SLASH         shift, and go to state 118
    LEFT_PAR      shift, and go to state 180


State 171

   47 for_statement: FOR RIGHT_PAR type assignment expression EROTIMATIKO assignment . LEFT_PAR RIGHT_BRC opt_statements LEFT_BRC

    LEFT_PAR  shift, and go to state 181


State 172

   51 case_clause: CASE expression . COLON opt_statements
   61 expression: expression . PLUS expression
   62           | expression . MINUS expression
   63           | expression . STAR expression
   64           | expression . SLASH expression
   65           | expression . GREATER_THAN expression
   66           | expression . LESS_THAN expression
   67           | expression . GE_OP expression
   68           | expression . LE_OP expression
   69           | expression . EQ_OP expression
   70           | expression . NE_OP expression
   71           | expression . AND_OP expression
   72           | expression . OR_OP expression

    EQ_OP         shift, and go to state 106
    COLON         shift, and go to state 182
    NE_OP         shift, and go to state 107
    GE_OP         shift, and go to state 108
    LE_OP         shift, and go to state 109
    AND_OP        shift, and go to state 110
    OR_OP         shift, and go to state 111
    GREATER_THAN  shift, and go to state 113
    LESS_THAN     shift, and go to state 114
    PLUS          shift, and go to state 115
    MINUS         shift, and go to state 116
    STAR          shift, and go to state 117
    SLASH         shift, and go to state 118


State 173

   52 opt_default_case: DEFAULT . COLON opt_statements

    COLON  shift, and go to state 183


State 174

   49 case_list: case_list case_clause .

    $default  reduce using rule 49 (case_list)


State 175

   48 switch_statement: SWITCH RIGHT_PAR expression LEFT_PAR RIGHT_BRC case_list opt_default_case . LEFT_BRC

    LEFT_BRC  shift, and go to state 184


State 176

   54 out_print: OUTPRINT RIGHT_PAR QT var_list QT LEFT_PAR EROTIMATIKO .

    $default  reduce using rule 54 (out_print)


State 177

   55 out_print: OUTPRINTLN RIGHT_PAR QT var_list QT LEFT_PAR EROTIMATIKO .

    $default  reduce using rule 55 (out_print)


State 178

   43 opt_else: ELSE . RIGHT_BRC opt_statements LEFT_BRC

    RIGHT_BRC  shift, and go to state 185


State 179

   42 if_statement: IF RIGHT_PAR expression LEFT_PAR RIGHT_BRC opt_statements LEFT_BRC opt_else .

    $default  reduce using rule 42 (if_statement)


State 180

   46 do_while_statement: DO RIGHT_BRC opt_statements LEFT_BRC WHILE RIGHT_PAR expression LEFT_PAR . EROTIMATIKO

    EROTIMATIKO  shift, and go to state 186


State 181

   47 for_statement: FOR RIGHT_PAR type assignment expression EROTIMATIKO assignment LEFT_PAR . RIGHT_BRC opt_statements LEFT_BRC

    RIGHT_BRC  shift, and go to state 187


State 182

   51 case_clause: CASE expression COLON . opt_statements

    PUBLIC      shift, and go to state 11
    PRIVATE     shift, and go to state 12
    INT         shift, and go to state 13
    CHAR        shift, and go to state 14
    DOUBLE      shift, and go to state 15
    BOOLEAN     shift, and go to state 16
    STRING      shift, and go to state 17
    RETURN      shift, and go to state 59
    IF          shift, and go to state 60
    WHILE       shift, and go to state 61
    DO          shift, and go to state 62
    FOR         shift, and go to state 63
    SWITCH      shift, and go to state 64
    BREAK       shift, and go to state 65
    OUTPRINT    shift, and go to state 66
    OUTPRINTLN  shift, and go to state 67
    T_VAR       shift, and go to state 8

    $default  reduce using rule 28 (opt_statements)

    var_decl            go to state 100
    modifier            go to state 20
    type                go to state 21
    opt_statements      go to state 188
    statement_list      go to state 70
    statement           go to state 71
    assignment          go to state 72
    if_statement        go to state 73
    while_statement     go to state 74
    do_while_statement  go to state 75
    for_statement       go to state 76
    switch_statement    go to state 77
    out_print           go to state 78
    return_statement    go to state 79
    break_statement     go to state 80
    identifier          go to state 81


State 183

   52 opt_default_case: DEFAULT COLON . opt_statements

    PUBLIC      shift, and go to state 11
    PRIVATE     shift, and go to state 12
    INT         shift, and go to state 13
    CHAR        shift, and go to state 14
    DOUBLE      shift, and go to state 15
    BOOLEAN     shift, and go to state 16
    STRING      shift, and go to state 17
    RETURN      shift, and go to state 59
    IF          shift, and go to state 60
    WHILE       shift, and go to state 61
    DO          shift, and go to state 62
    FOR         shift, and go to state 63
    SWITCH      shift, and go to state 64
    BREAK       shift, and go to state 65
    OUTPRINT    shift, and go to state 66
    OUTPRINTLN  shift, and go to state 67
    T_VAR       shift, and go to state 8

    $default  reduce using rule 28 (opt_statements)

    var_decl            go to state 100
    modifier            go to state 20
    type                go to state 21
    opt_statements      go to state 189
    statement_list      go to state 70
    statement           go to state 71
    assignment          go to state 72
    if_statement        go to state 73
    while_statement     go to state 74
    do_while_statement  go to state 75
    for_statement       go to state 76
    switch_statement    go to state 77
    out_print           go to state 78
    return_statement    go to state 79
    break_statement     go to state 80
    identifier          go to state 81


State 184

   48 switch_statement: SWITCH RIGHT_PAR expression LEFT_PAR RIGHT_BRC case_list opt_default_case LEFT_BRC .

    $default  reduce using rule 48 (switch_statement)


State 185

   43 opt_else: ELSE RIGHT_BRC . opt_statements LEFT_BRC

    PUBLIC      shift, and go to state 11
    PRIVATE     shift, and go to state 12
    INT         shift, and go to state 13
    CHAR        shift, and go to state 14
    DOUBLE      shift, and go to state 15
    BOOLEAN     shift, and go to state 16
    STRING      shift, and go to state 17
    RETURN      shift, and go to state 59
    IF          shift, and go to state 60
    WHILE       shift, and go to state 61
    DO          shift, and go to state 62
    FOR         shift, and go to state 63
    SWITCH      shift, and go to state 64
    BREAK       shift, and go to state 65
    OUTPRINT    shift, and go to state 66
    OUTPRINTLN  shift, and go to state 67
    T_VAR       shift, and go to state 8

    $default  reduce using rule 28 (opt_statements)

    var_decl            go to state 100
    modifier            go to state 20
    type                go to state 21
    opt_statements      go to state 190
    statement_list      go to state 70
    statement           go to state 71
    assignment          go to state 72
    if_statement        go to state 73
    while_statement     go to state 74
    do_while_statement  go to state 75
    for_statement       go to state 76
    switch_statement    go to state 77
    out_print           go to state 78
    return_statement    go to state 79
    break_statement     go to state 80
    identifier          go to state 81


State 186

   46 do_while_statement: DO RIGHT_BRC opt_statements LEFT_BRC WHILE RIGHT_PAR expression LEFT_PAR EROTIMATIKO .

    $default  reduce using rule 46 (do_while_statement)


State 187

   47 for_statement: FOR RIGHT_PAR type assignment expression EROTIMATIKO assignment LEFT_PAR RIGHT_BRC . opt_statements LEFT_BRC

    PUBLIC      shift, and go to state 11
    PRIVATE     shift, and go to state 12
    INT         shift, and go to state 13
    CHAR        shift, and go to state 14
    DOUBLE      shift, and go to state 15
    BOOLEAN     shift, and go to state 16
    STRING      shift, and go to state 17
    RETURN      shift, and go to state 59
    IF          shift, and go to state 60
    WHILE       shift, and go to state 61
    DO          shift, and go to state 62
    FOR         shift, and go to state 63
    SWITCH      shift, and go to state 64
    BREAK       shift, and go to state 65
    OUTPRINT    shift, and go to state 66
    OUTPRINTLN  shift, and go to state 67
    T_VAR       shift, and go to state 8

    $default  reduce using rule 28 (opt_statements)

    var_decl            go to state 100
    modifier            go to state 20
    type                go to state 21
    opt_statements      go to state 191
    statement_list      go to state 70
    statement           go to state 71
    assignment          go to state 72
    if_statement        go to state 73
    while_statement     go to state 74
    do_while_statement  go to state 75
    for_statement       go to state 76
    switch_statement    go to state 77
    out_print           go to state 78
    return_statement    go to state 79
    break_statement     go to state 80
    identifier          go to state 81


State 188

   51 case_clause: CASE expression COLON opt_statements .

    $default  reduce using rule 51 (case_clause)


State 189

   52 opt_default_case: DEFAULT COLON opt_statements .

    $default  reduce using rule 52 (opt_default_case)


State 190

   43 opt_else: ELSE RIGHT_BRC opt_statements . LEFT_BRC

    LEFT_BRC  shift, and go to state 192


State 191

   47 for_statement: FOR RIGHT_PAR type assignment expression EROTIMATIKO assignment LEFT_PAR RIGHT_BRC opt_statements . LEFT_BRC

    LEFT_BRC  shift, and go to state 193


State 192

   43 opt_else: ELSE RIGHT_BRC opt_statements LEFT_BRC .

    $default  reduce using rule 43 (opt_else)


State 193

   47 for_statement: FOR RIGHT_PAR type assignment expression EROTIMATIKO assignment LEFT_PAR RIGHT_BRC opt_statements LEFT_BRC .

    $default  reduce using rule 47 (for_statement)
